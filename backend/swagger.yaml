openapi: 3.0.0
info:
  title: Police API
  version: 1.0.0
  description: API for managing police operations.
servers:
  - url: https://projectpolicecctv-production.up.railway.app/api
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        role:
          type: string
    Vehicle:
      type: object
      properties:
        id:
          type: integer
        license_plate:
          type: string
        province:
          type: string
        license_plate_img_path:
          type: string
          nullable: true
        vehicle_type:
          type: string
        vehicle_color:
          type: string
        vehicle_brand:
          type: string
    Blacklist:
      type: object
      properties:
        id:
          type: integer
        license_plate:
          type: string
        province:
          type: string
        license_plate_img_path:
          type: string
          nullable: true
        vehicle_type:
          type: string
        vehicle_color:
          type: string
        vehicle_brand:
          type: string
        reason:
          type: string
        added_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    VehiclePass:
      type: object
      properties:
        id:
          type: integer
        vehicle_id:
          type: integer
        camera_id:
          type: integer
        pass_time:
          type: string
          format: date-time
        license_plate:
          type: string
        province:
          type: string
        camera_name:
          type: string
        is_blacklisted:
          type: boolean
        blacklist_reason:
          type: string
          nullable: true
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Registration successful
        '400':
          description: Bad request
        '500':
          description: Internal server error
  /login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid password
        '404':
          description: User not found
        '500':
          description: Internal server error
  /vehicles:
    post:
      summary: Add a new vehicle
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                license_plate:
                  type: string
                province:
                  type: string
                license_plate_img:
                  type: string
                  format: binary
                vehicle_type:
                  type: string
                vehicle_color:
                  type: string
                vehicle_brand:
                  type: string
      responses:
        '201':
          description: Vehicle added successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    get:
      summary: Get all vehicles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  vehicles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Vehicle'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /vehicles/{id}:
    get:
      summary: Get vehicle by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the vehicle
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  vehicle:
                    $ref: '#/components/schemas/Vehicle'
        '401':
          description: Unauthorized
        '404':
          description: Vehicle not found
        '500':
          description: Internal server error
    put:
      summary: Update vehicle by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the vehicle
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                license_plate:
                  type: string
                province:
                  type: string
                license_plate_img:
                  type: string
                  format: binary
                vehicle_type:
                  type: string
                vehicle_color:
                  type: string
                vehicle_brand:
                  type: string
      responses:
        '200':
          description: Vehicle updated successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    delete:
      summary: Delete vehicle by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the vehicle
      responses:
        '200':
          description: Vehicle deleted successfully
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /blacklist:
    post:
      summary: Add a new blacklist entry
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                license_plate:
                  type: string
                province:
                  type: string
                license_plate_img:
                  type: string
                  format: binary
                vehicle_type:
                  type: string
                vehicle_color:
                  type: string
                vehicle_brand:
                  type: string
                reason:
                  type: string
      responses:
        '201':
          description: Blacklist entry added successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    get:
      summary: Get all blacklist entries
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  blacklist:
                    type: array
                    items:
                      $ref: '#/components/schemas/Blacklist'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /blacklist/{id}:
    put:
      summary: Update blacklist entry by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the blacklist entry
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                license_plate:
                  type: string
                province:
                  type: string
                license_plate_img:
                  type: string
                  format: binary
                vehicle_type:
                  type: string
                vehicle_color:
                  type: string
                vehicle_brand:
                  type: string
                reason:
                  type: string
      responses:
        '200':
          description: Blacklist entry updated successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Blacklist item not found
        '500':
          description: Internal server error
    delete:
      summary: Delete blacklist entry by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the blacklist entry
      responses:
        '200':
          description: Blacklist entry deleted
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /vehicle-pass:
    post:
      summary: Record a vehicle passing through a camera
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                vehicle_id:
                  type: integer
                camera_id:
                  type: integer
                license_plate_img:
                  type: string
                  format: binary
      responses:
        '201':
          description: Vehicle pass recorded successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Vehicle or Camera not found
        '500':
          description: Internal server error
  /vehicle-pass/history:
    get:
      summary: Get vehicle pass history
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: vehicle_id
          required: true
          schema:
            type: integer
          description: ID of the vehicle
        - in: query
          name: start_date
          schema:
            type: string
            format: date
          description: Start date for filtering
        - in: query
          name: end_date
          schema:
            type: string
            format: date
          description: End date for filtering
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VehiclePass'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /vehicle-pass/search:
    get:
      summary: Search vehicle pass records
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: license_plate
          schema:
            type: string
          description: License plate to search for
        - in: query
          name: province
          schema:
            type: string
          description: Province to search for
        - in: query
          name: camera_id
          schema:
            type: integer
          description: Camera ID to search for
        - in: query
          name: start_time
          schema:
            type: string
            format: date-time
          description: Start time for filtering
        - in: query
          name: end_time
          schema:
            type: string
            format: date-time
          description: End time for filtering
        - in: query
          name: date
          schema:
            type: string
            format: date
          description: Date for filtering
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VehiclePass'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /vehicle-pass/{cameraId}:
    get:
      summary: Get vehicle pass records by camera ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: cameraId
          required: true
          schema:
            type: integer
          description: ID of the camera
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/VehiclePass'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
